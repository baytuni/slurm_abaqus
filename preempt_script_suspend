#!/usr/bin/env python3 

import sys
import os
import re
import shutil
import getpass
from common import *

if __name__ == "__main__":

    print(sys.argv)
    #This env variable has to be unset in order abaqus to run.
    if 'SLURM_GTIDS' in os.environ:
        del os.environ['SLURM_GTIDS']
    
    #Get slurm env variables
    submit_dir = sys.argv[1]
    #Get the input file name
    job_name = sys.argv[2]
    input_file_name = job_name + '.inp'
    slurm_job_id = sys.argv[3]
    slurm_ntasks = sys.argv[4]
    abaqus_version = sys.argv[5]
    
    user_name = getpass.getuser()
    job_folder_name = slurm_job_id + '_' + job_name + '_' + user_name 
    

    # If there is no folder in the scratch_dir, make one and copy
    #the input file
    if not os.path.isdir(AbaqusConstants.SCRATCH_FOLDER + job_folder_name):
        os.mkdir(AbaqusConstants.SCRATCH_FOLDER + job_folder_name)
        shutil.copy(input_file_name, AbaqusConstants.SCRATCH_FOLDER + 
                    job_folder_name)
        #Read additional files from the file and copy them to scratch
        additional_files = look_for_include_files(input_file_name)
        for file_name in additional_files:
            shutil.copy(file_name, AbaqusConstants.SCRATCH_FOLDER + 
                            job_folder_name)
                
    #cd in the scratch folder
    os.chdir(AbaqusConstants.SCRATCH_FOLDER + job_folder_name)

        with open(u'Res_' + input_file_name, 'w') as new_input_file:
            new_input_file.write(u'*Heading\n')
            new_input_file.write(new_input_string + '\n')
            for step_lines in all_step_lines[int(last_step) :]:
                for line in step_lines:
                    new_input_file.write(line)


        cmd_to_run = (AbaqusConstants.BIN_LOCATION  + 
                      u'abq' + abaqus_version + u' job=Res_' + job_name +
                      u' input=Res_' + input_file_name  + 
                      u' oldjob=' + job_name + u' cpus=' + slurm_ntasks +
                      u' -verbose 3 standard_parallel=all mp_mode=mpi interactive')
        print(cmd_to_run)
        os.system(cmd_to_run)

    else:
        print("3rd Condition")
        cmd_to_run = (AbaqusConstants.BIN_LOCATION  + 
                      u'abq' + abaqus_version + u' job=' + job_name +
                      u' input=' + input_file_name + 
                      u' oldjob=' + job_name + u'cpus=' + slurm_ntasks +
                      u' -verbose 3 standard_parallel=all mp_mode=mpi interactive')
        os.system(cmd_to_run)

    # If the job is completed, search for a specific string in the job file
    res_msg_file_name = u'Res_' + job_name + u'.msg'        
    msg_file_name = job_name + u'.msg'        
    if  os.path.isfile(res_msg_file_name):
        msg_file_name = res_msg_file_name
    if os.path.isfile(msg_file_name):
        if next(find_the_line('the analysis','has been completed',
                              msg_file_name)):
            finalize_job(job_name,submit_dir)
    else:
        print("No message file has been found. The analysis has probably " +
              "never been run!")

    sys.exit()
